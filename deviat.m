function [] = deviat(infile, sheet, bootstraps)% Based on deviat from Mohamed Noor's lab, used in% Cirulli, E.T., R.M. Kliman, and M.A. Noor (2007) J Mol Evol 64: 129-135;% also in% LaFave, M.C., S.L. Andersen, E.P. Stoffregen, J. Korda Holsclaw,K.P. Kohl, % L.J. Overton, and J. Sekelsky (2014) Genetics 196: 107-118.%% Rewritten for MATLAB by Jeff Sekelsky% v1.0, 5 July 2019%% Input is an Excel file with interval sizes and number of events.% deviat.m calculates a chi-square equivalent and bootstraps simulations to% give an estimated P value for whether the distribution of events is similar% to a random distribution%**************************************************************************% input parameters:%   infile - filename.xls or filename.xlsx%            first column is interval size%            second column is number of events in that interval%%   sheet - which worksheet in the excel file to read%%   bootstraps - number of bootstraps to run%%   Example: deviat('mydata.xlsx',2,10000) reads the data from the 2nd %            sheet of the mydata.xlsx file and analyzes with 10,000%            bootstraps%**************************************************************************dataset = xlsread(infile, sheet);intervals = length(dataset);   % number of intervalstotals = sum(dataset);         % array with totalsize, totaleventstotalsize = round(totals(1));  % sum of all interval sizestotalevents = totals(2);       % sum of all event numbersrunning = cumsum(dataset,1);   % cumulative sizes and events arraydisp(dataset)chi = 0;                       % chi-square equivalent%calculate chi-square equivalent for datasetfor i=1:intervals    xpect = totalevents * dataset(i,1) / totalsize;        % number expected = size of interval/total size * total events     chi = chi + ((dataset(i,2)-xpect)^2 / xpect);        %chi-square is (observed - expected)^2 / expectedendstat = 0;                       %statistic (i.e., how many bootstrap                                %simulations have a greater chi-squarefor i=1:bootstraps    simset = zeros(intervals,1);  %array to store simulation data        %loop to assign events into intervals randomly    for j=1:totalevents        r = randi([1,totalsize],1,1); %random integer 1 to totalsize            %loop to find which interval r goes into        for k=1:intervals               if (r<=running(k,1))                simset(k,1) = simset(k,1) + 1;                break            else                continue            end        end    end    %calculate chi-square for this bootstrap simulation     simchi = 0;        for m=1:intervals        simxpect = totalevents * dataset(m,1) / totalsize;        simchi = simchi + ((simset(m)-simxpect)^2 / simxpect);    end        %increment stat by one if simulation chi2 > chi2    if (simchi>chi)        stat = stat + 1;    endend%Print the results to the screenc = ['chi-square equivalent = ',num2str(chi),'.'];b = ['Of ',num2str(bootstraps),' bootstraps, ',num2str(stat),' had a greater chi-square equivalent.'];p = ['P =',num2str(stat/bootstraps,4)];disp(c)disp(b)disp(p)